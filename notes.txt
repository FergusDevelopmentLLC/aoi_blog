# aoi_blog

https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html

https://www.census.gov/cgi-bin/geo/shapefiles/index.php?year=2019&layergroup=Places

place population data
https://www.census.gov/content/census/en/data/datasets/time-series/demo/popest/2010s-total-cities-and-towns.html#ds

county population data
https://www.census.gov/data/tables/time-series/demo/popest/2010s-counties-total.html

what are places?
https://www2.census.gov/geo/pdfs/reference/GARM/Ch9GARM.pdf


https://www.dofactory.com/javascript/design-patterns/singleton

https://www.census.gov/newsroom/blogs/random-samplings/2015/03/understanding-population-density.html

https://www.postgresqltutorial.com/import-csv-file-into-posgresql-table/

https://levelup.gitconnected.com/finding-the-shortest-path-in-javascript-pt-1-breadth-first-search-67ae4653dbec

https://dba.stackexchange.com/questions/56840/can-i-provide-a-default-for-a-left-outer-join

https://www.postgresql.org/docs/9.1/sql-selectinto.html

https://gis.stackexchange.com/questions/20191/adding-basemaps-from-google-or-bing-in-qgis/217670#217670

https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html

https://vet.purdue.edu/vet-shoppe/

https://www.photopea.com/

https://giphy.com/gifs/jeopardy-alex-trebek-cAbRoMKBExGs8dMPfu/links

https://journeynorth.org/tm/LongitudeIntro.html

https://www.postgresql.org/

https://www.qgis.org/en/site/

https://www.census.gov/

Place
Next, we need the same sort of population data for our places, found here. Like the geographic place data above, the population place population available by state. Since we are working with Indiana, we'll pick up that state's population data.Â 
The Indiana file that I downloaded was named: sub-est2019_18.csv. After deleting unneeded columns, I came up with these columns. The place column will help us join to the place polygon data.
Like we did above with counties, here is the SQL to create the population_place table, and fill it with the data from above using the COPY command.
CREATE TABLE population_place (
  id SERIAL,
  state VARCHAR(255),
  place VARCHAR(255),
  state_name VARCHAR(255),
  name VARCHAR(255),
  pop_2019 integer,
  PRIMARY KEY (id)
);
COPY population_place(state, place, state_name, name, pop_2019)
FROM '/tmp/pop_place_indiana.csv'
DELIMITER ','
CSV HEADER;